
var vectorMap;var jsonFilters=[];var minColorMap;var maxColorMap;var mDiv;var mType;var background;var VectorialMap=function(){};VectorialMap.prototype.createMap=function(inputJSON,minRadius,maxRadius,mapDiv,minColor,maxColor,mapType,backgroundColor){background=backgroundColor;mType=mapType;jsonCountries=[];jsonMarkers=[];mDiv=mapDiv;minColorMap=minColor;maxColorMap=maxColor;if(!inputJSON.countries&&!inputJSON.markers){console.error();('You must give as input a list of markers or countries!');return;}
if(inputJSON.countries){jsonCountries=readCountriesFromJSON(inputJSON.countries);}
if(inputJSON.markers){jsonMarkers=readMarkersFromJSON(inputJSON.markers);numMarkers=jsonMarkers.length;}
var auxColors=generateColorsForTheCountries();jQuery.ajax({url:'../tooltip-templates/country_tooltip.html',success:function(result){countryTooltip=result;},async:false});jQuery.ajax({url:'../tooltip-templates/marker_tooltip.html',success:function(result){markerTooltip=result;},async:false});maps=new jvm.MultiMap({container:$('#'+mapDiv),maxLevel:1,main:{map:mType,backgroundColor:background,container:$('#'+mapDiv),onMarkerTipShow:function(e,label,index){var finalTooltip=buildMarkerTooltip(jsonMarkers,index);label.html(finalTooltip);},onRegionTipShow:function(e,countryName,code){var selectedCountry=-1;$.each(jsonCountries,function(index,currentCountry){if(currentCountry.Country===code){selectedCountry=currentCountry;return;}});if(selectedCountry!=-1){var finalTooltip=buildCountryTooltip(countryName,selectedCountry);countryName.html(finalTooltip);}else
countryName.html(countryName.html());},series:{markers:[{scale:[minColorMap,maxColorMap],values:[minCount,maxCount],legend:{vertical:true}}],regions:[{scale:[minColorMap,maxColorMap],attribute:'fill',values:auxColors}]}},regionStyle:{initial:{fill:'#B8E186'}},series:{regions:[{attribute:'fill'}]},mapUrlByCode:function(code,multiMap){var countryCode=code.toLowerCase();var mapName=countryCode+'_'+multiMap.defaultProjection+'_en';return'/lib/jvectormap/maps/'+countryCode+'-'+multiMap.defaultProjection+'-en.js';}});if(inputJSON.markers){$.each(jsonMarkers,function(index,currentMarker){map.addMarker(index,{latLng:[currentMarker.Latitude,currentMarker.Longitude],name:currentMarker.desc,style:{fill:'green',r:mapRange(currentMarker.Count,minCount,maxCount,minRadius,maxRadius)}});});}
this.createSlider();};function buildCountryTooltip(countryName,selectedCountry){var finalTooltip=countryTooltip;finalTooltip=finalTooltip.replace('name',countryName.html());finalTooltip=finalTooltip.replace('count',selectedCountry.Count);return finalTooltip;}
function buildMarkerTooltip(jsonMarkers,index){var finalTooltip=markerTooltip;finalTooltip=finalTooltip.replace('description',jsonMarkers[index].desc);finalTooltip=finalTooltip.replace('latitude',jsonMarkers[index].Latitude);finalTooltip=finalTooltip.replace('longitude',jsonMarkers[index].Longitude);return finalTooltip;}
function reloadMap(colors){if(jsonCountries.length>0)
readMinMax(colors);$("#"+mDiv).empty();map=new jvm.Map({map:mType,backgroundColor:background,container:$('#'+mDiv),onMarkerTipShow:function(e,label,index){var finalTooltip=buildMarkerTooltip(jsonMarkers,index);label.html(finalTooltip);},onRegionTipShow:function(e,countryName,code){var selectedCountry=-1;$.each(jsonCountries,function(index,currentCountry){if(currentCountry.Country===code){selectedCountry=currentCountry;return;}});if(selectedCountry!=-1){var finalTooltip=buildCountryTooltip(countryName,selectedCountry);countryName.html(finalTooltip);}else
countryName.html(countryName.html());},series:{markers:[{scale:[minColorMap,maxColorMap],values:[minCount,maxCount],legend:{vertical:true}}],regions:[{scale:[minColorMap,maxColorMap],attribute:'fill',values:colors}]}});}
function mapRange(value,low1,high1,low2,high2){return low2+(high2-low2)*(value-low1)/(high1-low1);}
VectorialMap.prototype.createSlider=function(){slider=$("#slider").slider();slider.slider("option","min",minRadius);slider.slider("option","max",maxRadius);slider.slider("option","range",true);slider.slider("option","animate","slow");slider.on("slidechange",function(event,ui){sliderChanged();});$('#slider').hide();$('#minSlider').hide();$('#maxSlider').hide();}
VectorialMap.prototype.filterOnServer=function(filters){$.getJSON("../json/serverFilter.json",function(filtersJSON){var filtersString=JSON.stringify(filtersJSON);var url='http://serverFiltering.com/?data='+encodeURIComponent(filtersString);url='../json/countries_plus_markers2.json';$.getJSON(url,function(json){jsonCountries=readCountriesFromJSON(json.countries);var countryColors=generateColorsForTheCountries(jsonCountries);reloadMap(countryColors);if(json.markers){jsonMarkers=readMarkersFromJSON(json.markers);addMarkersToMap(jsonMarkers);}});});}
var Country=function(countryObject,name,count){if(countryObject==''){this.Country=name;this.Count=+count;this.Var=0;this.desc='abc';}else{var hasName=true;var i=0;do{i++;var currentNameToCheck='Name'+i;var currentValue='Value'+i;if(countryObject[currentNameToCheck]===undefined){hasName=false;}else{this[currentNameToCheck]=countryObject[currentNameToCheck];this[currentValue]=countryObject[currentValue];}}while(hasName);this.Country=countryObject.Country;this.Count=+countryObject.Count;this.Var=countryObject.Var;this.desc='abc';}};function generateColorsForTheCountries(countries){if(!countries)
countries=jsonCountries;var countryColors=[];$.each(countries,function(index,currentCountry){countryColors[currentCountry.Country]=currentCountry.Count;});return countryColors;};function readCountriesFromJSON(markers){var countries=[];var numJSONCountries=markers.length;minCount=Infinity;maxCount=-Infinity;$.each(markers,function(index,currentCountry){countries[index]=new Country(currentCountry);if(countries[index].Count>maxCount)
maxCount=countries[index].Count;if(countries[index].Count<minCount)
minCount=countries[index].Count;});return countries;}
function findCountryByName(countryName)
{var returnCountry=null;$.each(jsonCountries,function(index,currentCountry){if(currentCountry.Country==countryName)
{returnCountry=currentCountry;return returnCountry;}});return returnCountry;}
function readMinMax(countriesNames)
{minCount=Infinity;maxCount=-Infinity;var keys=[];for(var key in countriesNames){if(countriesNames.hasOwnProperty(key)){keys.push(key);}}
$.each(keys,function(index,currentCountryName){var currentCountry=findCountryByName(currentCountryName);if(currentCountry.Count>maxCount)
maxCount=currentCountry.Count;if(currentCountry.Count<minCount)
minCount=currentCountry.Count;});}
function setFilters(jsonFilters,filterType){function setMenu(){$.each(jsonFilters,function(index,currentFilter){var filterName=currentFilter.Name;var toAppend='';toAppend+='<li>'+filterName+'<ul>';$.each(currentFilter.Values,function(i,currentValue){toAppend+='<li filter_index='+index+'>'+currentValue+'</li>';});toAppend+='</ul></li>';$('#jquerymenu').append(toAppend);});$("#jquerymenu").menu();$("#jquerymenu").on("menuselect",function(event,ui){var selectedFilter=jsonFilters[ui.item.attr('filter_index')];var filterValue=ui.item.text();filterFromMenuSelected(selectedFilter,filterValue);});}
function setRadioButtons(){$.each(jsonFilters,function(index,currentFilter){var filterName=currentFilter.Name;var toAppend='';toAppend+='<input type="radio" id="radio'+Number(index+1)+'" name="radio">';toAppend+='<label for = "radio'+Number(index+1)+'">'+filterName+' </label>';$('#radioButtons').append(toAppend);});$("#radioButtons").buttonset();$("#search_button").click(function(){var searchText=$('#search_text').val();if(searchText==='')
alert('You must enter a search text');else
console.log('searching for '+searchText);});}
switch(filterType){case'menu':$('#checkboxes_search').hide();setMenu();break;case'radio':$('#jquerymenu').hide();setRadioButtons();break;default:console.log('not supported filter')
break;}}
function createFiltersBox(jsonFilters){var selectedMultipleFilters=[];$.each(jsonFilters,function(index,currentFilter){var filterName=currentFilter.Name.toLowerCase();filterName=filterName.charAt(0).toUpperCase()+filterName.slice(1);var buttonId='dropdown'+index+'button';var ulId='dropdown'+index;var toAppend='';toAppend+='<p><b>'+filterName+':</b></p>';toAppend+='<div class="dropdown">';toAppend+='<button id='+buttonId+' class="btn btn-primary dropdown-toggle filter-box-dropdown" type="button" data-toggle="dropdown">Select a value<span class="caret"></span></button>';toAppend+='<ul id='+ulId+' class="dropdown-menu">';$.each(currentFilter.Values,function(valueIndex,element){toAppend+='<li><a href="#" filterIndex='+index+' index='+valueIndex+'>'+element+' </a></li>';});toAppend+='</ul></div>';$('#filters_box').prepend(toAppend);$("#"+ulId+" li a").click(function(){var filterIndex=$(this).attr('filterIndex');var selectedIndex=$(this).attr('index');$("#"+buttonId+":first-child").text($(this).text());$("#"+buttonId+":first-child").val($(this).text());selectedMultipleFilters[filterIndex]=jsonFilters[filterIndex].Values[selectedIndex];});$('#filters_box').tooltip({title:"Use this filter box to filter by multiple filters",placement:"bottom"});});$("#filter_box_apply_filters").click(function(){if(selectedMultipleFilters.length!=0)
applyMultipleFilters(selectedMultipleFilters,jsonFilters);});$("#filter_box_reset_filters").click(function(){$(".filter-box-dropdown").text("Select a value");$(".filter-box-dropdown").val('Select a value');var colors=[];$.each(jsonCountries,function(index,currentCountry){colors[currentCountry.Country]=currentCountry.Count;});reloadMap(colors);$.each(jsonMarkers,function(index,currentMarker){map.addMarker(index,{latLng:[currentMarker.Latitude,currentMarker.Longitude],name:currentMarker.desc,style:{fill:'green',r:mapRange(currentMarker.Count,minCount,maxCount,minRadius,maxRadius)}});});});}
var resetFiltersBox=function(){for(var i=0;i<numFilters;i++){$("#fbox"+i).text('');$("#fbox"+i).val('');}
var colors=generateColorsForTheCountries();reloadMap(colors);$.each(jsonMarkers,function(index,currentMarker){map.addMarker(index,{latLng:[currentMarker.Latitude,currentMarker.Longitude],name:currentMarker.desc,style:{fill:'green',r:mapRange(currentMarker.Count,minCount,maxCount,minRadius,maxRadius)}});});};function createFiltersBoxWithEnumeration(jsonFilters){var numFilters=jsonFilters.length;$.each(jsonFilters,function(index,currentFilter){var filterName=currentFilter.Name.toLowerCase();filterName=filterName.charAt(0).toUpperCase()+filterName.slice(1);var buttonId='dropdown'+index+'button';var ulId='dropdown'+index;var toAppend='';toAppend+='<p><b>'+filterName+':</b></p>';toAppend+='<div class="form-group">';toAppend+='<input type="text" class="form-control" id="fbox'+index+'"';var placeholder=currentFilter.Values
toAppend+='placeholder="'+placeholder+'" +>';toAppend+='</div>';$('#filters_box_enumeration').prepend(toAppend);$('#filters_box_enumeration').tooltip({title:"Use this filter box to filter by multiple filters",placement:"bottom"});});$("#filters_box_enum_apply_filters").click(function(){var jsonText='{';for(var i=0;i<jsonFilters.length;i++){var currentFilter="#fbox"+i;var nextFilter="#fbox"+(i+1);var currentFilterValue=$(currentFilter).val();var nextFilterValue=$(nextFilter).val();if(currentFilterValue!==''){jsonText+='"'+jsonFilters[i].Name+'": "'+currentFilterValue+'"';if(nextFilterValue!==''&&$(nextFilter).length>0)
jsonText+=',';}}
jsonText+='}';var filtersToApply=JSON.parse(jsonText);filter(filtersToApply);});$("#filters_box_enum_reset_filters").click(function(){resetFiltersBox();});}
function getAllFilterValues(filterValue){var returnParts=[];if(String(filterValue).indexOf(",")!=-1){var enumerationParts=String(filterValue).split(",");$.each(enumerationParts,function(index,currentEnumeration){if(currentEnumeration.indexOf("-")!=-1){var rangeParts=String(currentEnumeration).split("-");checkFilterValuesAreValid(filterObject,rangeParts);var min=rangeParts[0];var max=rangeParts[1];for(;min<=max;min++)
returnParts.push(min);}else{returnParts.push(currentEnumeration);}});}else{if(filterValue.indexOf("-")!=-1){var subParts=String(filterValue).split("-");checkFilterValuesAreValid(filterObject,subParts);var min=subParts[0];var max=subParts[1];for(;min<=max;min++){returnParts.push(min);}}else
returnParts.push(filterValue);}
return returnParts;}
function checkWhatCountriesToAdd(selectedFilter,filterValue){var countries=[];$.each(jsonCountries,function(index,currentCountry){var i=0;do{i++;var currentNameToCheck='Name'+i;var currentValue='Value'+i;if(currentCountry[currentNameToCheck]){if(currentCountry[currentValue]==filterValue){countryValueToCheck=currentValue;if(currentCountry[currentValue]==filterValue)
countries[currentCountry.Country]=currentCountry.Count;}}else
break;}while(true)});return countries;};function checkWhatMarkersToAdd(selectedFilter,filterValue){var markers=[];$.each(jsonMarkers,function(index,currentMarker){var i=0;do{i++;var currentNameToCheck='Name'+i;var currentValue='Value'+i;if(currentMarker[currentNameToCheck]){if(currentMarker[currentNameToCheck]==selectedFilter.Name){if(currentMarker[currentValue]==filterValue)
markers.push(currentMarker);}}else{break;}}while(true)});return markers;};function checkWhatCountriesMarkersToAdd(selectedFilter,filterValue){var countriesToAdd=[];var markersToAdd=[];countriesToAdd=checkWhatCountriesToAdd(selectedFilter,filterValue);markersToAdd=checkWhatMarkersToAdd(selectedFilter,filterValue);return[countriesToAdd,markersToAdd];}
function checkFilterNameIsValid(filterName){var valid=false;$.each(jsonFiltersArray,function(index,currentFilter){if(currentFilter.Name.toLowerCase()===filterName.toLowerCase()){filterObject=currentFilter;valid=true;return;}});return valid;}
function checkFilterValuesAreValid(filter,filterValues){var valid=false;$.each(filterValues,function(index,part){$.each(filterObject.Values,function(index,currentValue){if(currentValue==part){valid=true;return;}});if(!valid){console.log('Invalid value for the filter: '+part);return;}});return valid;}
function addMarkersToMap(markers){$.each(markers,function(index,currentMarker){map.addMarker(index,{latLng:[currentMarker.Latitude,currentMarker.Longitude],name:currentMarker.desc,style:{fill:'green',r:mapRange(currentMarker.Count,minCount,maxCount,minRadius,maxRadius)}});});}
var Filter=function(Name,Value,Values){this.Name=Name;this.Value=Value;this.Values=Values;};var numFilters;var currentFilter;var countryValueToCheck;function resetFilters(){var colors=generateColorsForTheCountries();reloadMap(colors);$.each(jsonMarkers,function(index,currentMarker){map.addMarker(index,{latLng:[currentMarker.Latitude,currentMarker.Longitude],name:currentMarker.desc,style:{fill:'green',r:mapRange(currentMarker.Count,minCount,maxCount,minRadius,maxRadius)}});});}
function filterFromMenuSelected(selectedFilter,filterValue){currentFilter=selectedFilter;var countries=checkWhatCountriesToAdd(selectedFilter,filterValue);reloadMap(countries);$.each(jsonMarkers,function(index,currentMarker){var i=0;do{i++;var currentNameToCheck='Name'+i;var currentValue='Value'+i;if(currentMarker[currentNameToCheck]){if(currentMarker[currentNameToCheck]===selectedFilter.Name){if(currentMarker[currentValue]===filterValue){map.addMarker(index,{latLng:[currentMarker.Latitude,currentMarker.Longitude],name:currentMarker.desc,style:{fill:'green',r:mapRange(currentMarker.Count,minCount,maxCount,minRadius,maxRadius)}});}}}else{break;}}while(true)});if(!isNaN(selectedFilter.Values[0])){$('#slider').show();$('#minSlider').show();$('#maxSlider').show();var slider=$("#slider").slider();var minValue=selectedFilter.Values[0];var maxValue=selectedFilter.Values[selectedFilter.Values.length-1];slider.slider("option","min",minValue);slider.slider("option","max",maxValue);$('#minSlider').text(minValue);$('#maxSlider').text(maxValue);}else{$('#slider').hide();$('#minSlider').hide();$('#maxSlider').hide();}}
function sliderChanged(){var currentRange=slider.slider("option","values");var min=currentRange[0];var max=currentRange[1];var currentFilterName=currentFilter.Name;$('#minSlider').text(min);$('#maxSlider').text(max);var countries=[];$.each(jsonCountries,function(index,currentCountry){var filterValueForCountry=+currentCountry[countryValueToCheck];if(filterValueForCountry>=min&&filterValueForCountry<=max)
countries[currentCountry.Country]=currentCountry.Count;});reloadMap(countries);var currentCountry=jsonCountries[0];var selectedName;var i=0;do{i++;var currentNameToCheck='Name'+i;var currentValue='Value'+i;if(currentCountry[currentNameToCheck]===currentFilterName){selectedName=currentValue;break;}}while(true);$.each(jsonMarkers,function(index,currentMarker){if(currentMarker[selectedName]>=min&&currentMarker[selectedName]<=max){map.addMarker(index,{latLng:[currentMarker.Latitude,currentMarker.Longitude],name:currentMarker.desc,style:{fill:'green',r:mapRange(currentMarker.Count,minCount,maxCount,minRadius,maxRadius)}});}});};function readFiltersFromJSON(inputFilters){var filters=[];for(var i=0;i<inputFilters.values.length;i++){currentFilter=inputFilters.values[i];var name=currentFilter.name;var value=currentFilter.value;var values=[];for(var j=0;j<currentFilter.values.length;j++)
values.push(currentFilter.values[j]);filters[i]=new Filter(name,value,values);}
numFilters=filters.length;return filters;};
var mappingMarkers=[];var mappingCountries=[];VectorialMap.prototype.registerTransformer=function(jsonLocation,countriesMappingJson,markersMappingJson){var countriesMappingJson="../mappingJSON/mappingCountriesSample.json";var markersMappingJson="../mappingJSON/mappingMarkersSample.json";if(!countriesMappingJson){console.error('you must specify a countries mapping json');return;}
if(!markersMappingJson){console.error('you must specify a markers mapping json');return;}
jsonLocation="../json/espid-spain.json";$.getJSON(jsonLocation,function(json){jsonMapCountries(json,countriesMappingJson);jsonMapMarkers(json,markersMappingJson);});}
function jsonMapCountries(json,countriesMappingJson){var countries=[];$.getJSON(countriesMappingJson,function(jsonMapping){$.each(json,function(index,currentJSON){var jsonCountry='{';var name=currentJSON[jsonMapping.Country];var count=0;var description='';countries[index]=new Country('',name,count);});mappingCountries=countries;console.log(mappingCountries);});}
function jsonMapMarkers(json,markersMappingJson){var markers=[];$.getJSON(markersMappingJson,function(jsonMapping){$.each(json,function(index,currentJSON){var name=currentJSON[jsonMapping.Country];var count=0;var latitude=currentJSON[jsonMapping.Latitude];var longitude=currentJSON[jsonMapping.Longitude];var description='';markers[index]=new Marker('',name,count,latitude,longitude);});mappingMarkers=markers;console.log(mappingMarkers);});}
var Marker=function(markerObject,name,count,latitude,longitude){if(markerObject=='')
{this.Country=name;this.Count=+count;this.Var='';this.Latitude=latitude;this.Longitude=longitude;this.desc='abc';}
else{var hasName=true;var i=0;do{i++;var currentNameToCheck='Name'+i;var currentValue='Value'+i;if(!markerObject[currentNameToCheck]){hasName=false;}else{this[currentNameToCheck]=markerObject[currentNameToCheck];this[currentValue]=markerObject[currentValue];}}while(hasName)
this.Country=markerObject.Country;this.Count=+markerObject.Count;this.Var=markerObject.Var;this.Latitude=markerObject.Latitude;this.Longitude=markerObject.Longitude;this.desc='abc';}};function readMarkersFromJSON(jsonMarkers){var markers=[];minCount=Infinity;maxCount=-Infinity;$.each(jsonMarkers,function(index,currentJSONMarker){markers[index]=new Marker(currentJSONMarker);var currentCountValue=markers[index].Count;if(currentCountValue>maxCount){maxCount=currentCountValue;}
if(currentCountValue<minCount)
minCount=currentCountValue;});return markers;}
function addMarkersToMap(markers){$.each(markers,function(index,currentMarker){map.addMarker(index,{latLng:[currentMarker.Latitude,currentMarker.Longitude],name:currentMarker.desc,style:{fill:'green',r:mapRange(currentMarker.Count,minCount,maxCount,minRadius,maxRadius)}});});}
function filter(inputArgs){var keys=Object.keys(inputArgs)
var numberKeys=keys.length;var validFilters=0;var countriesByFilter=new Array();var markersByFilter=new Array();for(i=0;i<numberKeys;i++){countriesByFilter[i]=new Array();markersByFilter[i]=new Array();}
var exit=false;$.each(keys,function(index,filterName){if(filterName.toLowerCase()=='all'){exit=true;resetFilters();resetFiltersBox();return;}});if(exit)
return;$.each(keys,function(index,filterName){if(!checkFilterNameIsValid(filterName)){console.log('Invalid filter name!('+filterName+')');return;}else{var filterValue=inputArgs[filterName];var finalParts=getAllFilterValues(filterValue);validFilters++;$.each(finalParts,function(i,part){var checkReturn=checkWhatCountriesMarkersToAdd(filterObject,part);var countriesAux=checkReturn[0];var markersAux=checkReturn[1];$.each(Object.keys(countriesAux),function(j,currentKey){var keyValue=countriesAux[currentKey];countriesByFilter[index][currentKey]=keyValue;});$.each(markersAux,function(j,currentMarker){markersByFilter[index].push(currentMarker);});});}});var finalCountries=[];if(countriesByFilter.length>0){finalCountries=countriesByFilter[0];for(var i=0;i<countriesByFilter.length-1;i++)
finalCountries=getCountriesIntersection(finalCountries,countriesByFilter[i+1]);}
reloadMap(finalCountries);var finalMarkers=[];if(markersByFilter.length>0){finalMarkers=markersByFilter[0];for(var i=0;i<markersByFilter.length-1;i++){finalMarkers=getMarkersIntersection(finalMarkers,markersByFilter[i+1]);}}
addMarkersToMap(finalMarkers);}
function getMarkersIntersection(markersGroup1,markersGroup2){var markers=[];$.each(markersGroup1,function(index,marker1){var marker1Country=marker1.Country;$.each(markersGroup2,function(index,marker2){var marker2Country=marker2.Country;if(marker1Country==marker2Country)
markers.push(marker1)});});return markers;}
function getCountriesIntersection(countriesGroup1,countriesGroup2){var countries=[];$.each(Object.keys(countriesGroup1),function(index,countryName1){$.each(Object.keys(countriesGroup2),function(index,countryName2){if(countryName1==countryName2)
countries[countryName1]=countriesGroup1[countryName1];});});return countries;}
function applyMultipleFiltersProgramattically(filtersToApply){console.log('Filters to apply: '+filtersToApply);var keys=Object.keys(filtersToApply)
var numFiltersToApply=keys.length;var countriesHaveFilter=[];var markersHaveFilter=[];$.each(keys,function(index,filterName){var filterValue=filtersToApply[filterName];});var colors=[];map.removeAllMarkers();$.each(jsonCountries,function(countryIndex,currentCountry){countriesHaveFilter[countryIndex]=0;$.each(keys,function(index,currentFilterName){var i=0;do{i++;var currentNameToCheck='Name'+i;var currentValue='Value'+i;if(!currentCountry[currentNameToCheck])
break;if(currentCountry[currentNameToCheck].toLowerCase()==currentFilterName.toLowerCase()){if(currentCountry[currentValue]==filtersToApply[currentFilterName])
countriesHaveFilter[countryIndex]++;}}while(true)});});$.each(jsonCountries,function(countryIndex,currentCountry){if(countriesHaveFilter[countryIndex]==numFiltersToApply)
colors[currentCountry.Country]=currentCountry.Count;});reloadMap(colors);$.each(jsonMarkers,function(markerIndex,currentMarker){markersHaveFilter[markerIndex]=0;$.each(keys,function(index,currentFilterName){var i=0;do{i++;var currentNameToCheck='Name'+i;var currentValue='Value'+i;if(!currentMarker[currentNameToCheck])
break;if(currentMarker[currentNameToCheck].toLowerCase()==currentFilterName.toLowerCase()){if(currentMarker[currentValue]==filtersToApply[currentFilterName])
markersHaveFilter[markerIndex]++;}}while(true)});});$.each(jsonMarkers,function(index,currentMarker){if(markersHaveFilter[index]==numFiltersToApply){map.addMarker(index,{latLng:[currentMarker.Latitude,currentMarker.Longitude],name:currentMarker.desc,style:{fill:'green',r:mapRange(currentMarker.Count,minCount,maxCount,minRadius,maxRadius)}});}});}
function applyMultipleFilters(selectedMultipleFilters,jsonFilters){var numFiltersToApply=selectedMultipleFilters.filter(function(value){return value!==undefined}).length;var countriesHaveFilter=[];var markersHaveFilter=[];$.each(jsonCountries,function(countryIndex,currentCountry){countriesHaveFilter[countryIndex]=0;$.each(selectedMultipleFilters,function(index,currentFilterValue){var i=0;do{i++;var currentNameToCheck='Name'+i;var currentValue='Value'+i;if(currentCountry[currentNameToCheck]==undefined)
break;if(currentCountry[currentNameToCheck]===jsonFilters[index].Name){if(currentCountry[currentValue]==currentFilterValue){countriesHaveFilter[countryIndex]++;}}}while(true)});});var colors=[];$.each(jsonCountries,function(countryIndex,currentCountry){if(countriesHaveFilter[countryIndex]==numFiltersToApply)
colors[currentCountry.Country]=currentCountry.Count;});reloadMap(colors);$.each(jsonMarkers,function(markerIndex,currentMarker){markersHaveFilter[markerIndex]=0;$.each(selectedMultipleFilters,function(index,currentFilterValue){var i=0;do{i++;var currentNameToCheck='Name'+i;var currentValue='Value'+i;if(!currentMarker[currentNameToCheck])
break;if(currentMarker[currentNameToCheck].toLowerCase()==jsonFilters[index].Name.toLowerCase()){if(currentMarker[currentValue]==currentFilterValue)
markersHaveFilter[markerIndex]++;}}while(true)});});$.each(jsonMarkers,function(index,currentMarker){if(markersHaveFilter[index]==numFiltersToApply){map.addMarker(index,{latLng:[currentMarker.Latitude,currentMarker.Longitude],name:currentMarker.desc,style:{fill:'green',r:mapRange(currentMarker.Count,minCount,maxCount,minRadius,maxRadius)}});}});}
//@ sourceMappingURL=jsMapsApi.min.js.map